›
@C:\workspace\DevShop\Cadastrador\Controllers\PedidoController.cs
	namespace 	
Cadastrador
 
. 
Controllers !
{ 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
PedidoController !
:" #
ControllerBase$ 2
{		 
[

 	
HttpPost

	 
]

 
public 
async 
Task 
	PostAsync #
(# $
[$ %
FromBody% -
]- .
Pedido/ 5
pedido6 <
)< =
{ 	
pedido 
. 
id 
= 
Guid 
. 
NewGuid $
($ %
)% &
.& '
ToString' /
(/ 0
)0 1
;1 2
pedido 
. 
DataCriacao 
=  
DateTime! )
.) *
Now* -
;- .
await 
pedido 
. 
SalvarAsync $
($ %
)% &
;& '
Console 
. 
	WriteLine 
( 
$"  
$str  =
{= >
pedido> D
.D E
idE G
}G H
"H I
)I J
;J K
} 	
} 
} ³
@C:\workspace\DevShop\Cadastrador\Controllers\ValuesController.cs
	namespace 	
Cadastrador
 
. 
Controllers !
;! "
[ 
Route 
( 
$str 
) 
] 
public 
class 
ValuesController 
: 
ControllerBase  .
{ 
[		 
HttpGet		 
]		 
public

 

IEnumerable

 
<

 
string

 
>

 
Get

 "
(

" #
)

# $
{ 
return 
new 
string 
[ 
] 
{ 
$str &
,& '
$str( 0
}1 2
;2 3
} 
[ 
HttpGet 
( 
$str 
) 
] 
public 

string 
Get 
( 
int 
id 
) 
{ 
return 
$str 
; 
} 
[ 
HttpPost 
] 
public 

void 
Post 
( 
[ 
FromBody 
] 
string %
value& +
)+ ,
{ 
} 
[ 
HttpPut 
( 
$str 
) 
] 
public 

void 
Put 
( 
int 
id 
, 
[ 
FromBody %
]% &
string& ,
value- 2
)2 3
{ 
}   
[## 

HttpDelete## 
(## 
$str## 
)## 
]## 
public$$ 

void$$ 
Delete$$ 
($$ 
int$$ 
id$$ 
)$$ 
{%% 
}&& 
}'' Ž
4C:\workspace\DevShop\Cadastrador\LambdaEntryPoint.cs
	namespace 	
Cadastrador
 
; 
public		 
class		 
LambdaEntryPoint		 
:		 
Amazon 

.
 
Lambda 
. 
AspNetCoreServer "
." ##
APIGatewayProxyFunction# :
{ 
	protected 
override 
void 
Init  
(  !
IWebHostBuilder! 0
builder1 8
)8 9
{ 
builder 
.   

UseStartup   
<   
Startup   
>    
(    !
)  ! "
;  " #
}!! 
	protected** 
override** 
void** 
Init**  
(**  !
IHostBuilder**! -
builder**. 5
)**5 6
{++ 
},, 
}-- ƒ

3C:\workspace\DevShop\Cadastrador\LocalEntryPoint.cs
	namespace 	
Cadastrador
 
; 
public 
class 
LocalEntryPoint 
{ 
public 

static 
void 
Main 
( 
string "
[" #
]# $
args% )
)) *
{		 
CreateHostBuilder

 
(

 
args

 
)

 
.

  
Build

  %
(

% &
)

& '
.

' (
Run

( +
(

+ ,
)

, -
;

- .
} 
public 

static 
IHostBuilder 
CreateHostBuilder 0
(0 1
string1 7
[7 8
]8 9
args: >
)> ?
=>@ B
Host 
.  
CreateDefaultBuilder !
(! "
args" &
)& '
. $
ConfigureWebHostDefaults %
(% &

webBuilder& 0
=>1 3
{ 

webBuilder 
. 

UseStartup %
<% &
Startup& -
>- .
(. /
)/ 0
;0 1
} 
) 
; 
} Ý
+C:\workspace\DevShop\Cadastrador\Startup.cs
	namespace 	
Cadastrador
 
; 
public 
class 
Startup 
{ 
public 

Startup 
( 
IConfiguration !
configuration" /
)/ 0
{ 
Configuration 
= 
configuration %
;% &
} 
public

 

IConfiguration

 
Configuration

 '
{

( )
get

* -
;

- .
}

/ 0
public 

void 
ConfigureServices !
(! "
IServiceCollection" 4
services5 =
)= >
{ 
services 
. 
AddControllers 
(  
)  !
;! "
} 
public 

void 
	Configure 
( 
IApplicationBuilder -
app. 1
,1 2
IWebHostEnvironment3 F
envG J
)J K
{ 
if 

( 
env 
. 
IsDevelopment 
( 
) 
)  
{ 	
app 
. %
UseDeveloperExceptionPage )
() *
)* +
;+ ,
} 	
app 
. 

UseRouting 
( 
) 
; 
app!! 
.!! 
UseAuthorization!! 
(!! 
)!! 
;!! 
app## 
.## 
UseEndpoints## 
(## 
	endpoints## "
=>### %
{$$ 	
	endpoints%% 
.%% 
MapControllers%% $
(%%$ %
)%%% &
;%%& '
	endpoints&& 
.&& 
MapGet&& 
(&& 
$str&&  
,&&  !
async&&" '
context&&( /
=>&&0 2
{'' 
await(( 
context(( 
.(( 
Response(( &
.((& '

WriteAsync((' 1
(((1 2
$str((2 a
)((a b
;((b c
})) 
))) 
;)) 
}** 	
)**	 

;**
 
}++ 
},, 